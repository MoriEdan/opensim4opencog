<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LAIR.ResourceAPIs.VerbNet</name>
    </assembly>
    <members>
        <member name="T:LAIR.ResourceAPIs.VerbNet.VerbNetEngine">
            <summary>
            Provides access to VerbNet
            </summary>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbNetEngine.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="verbNetDirectory">Path to the VerbNet directory</param>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbNetEngine.ExtractClass(System.String,System.Boolean)">
            <summary>
            Extracts a VerbNet class from its XML definition
            </summary>
            <param name="classXML">XML for class</param>
            <param name="isSubClassXML">Whether or not the XML describes a sub-class</param>
            <returns>VerbClass</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbNetEngine.ContainsVerb(System.String)">
            <summary>
            Gets whether or not VerbNet contains a verb
            </summary>
            <param name="verb">Verb to check</param>
            <returns>True if verb is present and false otherwise</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbNetEngine.ContainsClass(System.String)">
            <summary>
            Checks whether or not a VerbNet class exists
            </summary>
            <param name="classID">ID of class to check for in dotted notation</param>
            <returns>True if class is present and false otherwise</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbNetEngine.GetClassesFor(System.String)">
            <summary>
            Gets classes for a verb
            </summary>
            <param name="verb">Verb to get classes for</param>
            <returns>Classes for verb</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbNetEngine.GetClass(System.String)">
            <summary>
            Gets a class from the VerbNet hierarchy
            </summary>
            <param name="id">ID of class in 0.1.2.3 format</param>
            <returns>Verb class</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbNetEngine.TryGetClass(System.String,LAIR.ResourceAPIs.VerbNet.VerbClass@)">
            <summary>
            Gets a class from the VerbNet hierarchy
            </summary>
            <param name="id">ID of class in 0.1.2.3 format</param>
            <param name="verbClass">Verb class if one was found</param>
            <returns>Verb class</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbNetEngine.GetClassesFor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets classes for a set of verbs (union)
            </summary>
            <param name="verbs">Verbs to get classes for</param>
            <returns>Classes for verbs</returns>
        </member>
        <member name="P:LAIR.ResourceAPIs.VerbNet.VerbNetEngine.RootVerbClass">
            <summary>
            Gets the root verb class of the VerbNet hierarchy
            </summary>
        </member>
        <member name="T:LAIR.ResourceAPIs.VerbNet.VerbNetEngine.ThematicRole">
            <summary>
            Thematic roles defined in VerbNet
            </summary>
        </member>
        <member name="T:LAIR.ResourceAPIs.VerbNet.VerbClass">
            <summary>
            Represents a class of verbs in VerbNet
            </summary>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="id">ID of class in dotted notation</param>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.AddVerb(System.String)">
            <summary>
            Adds a verb to this class
            </summary>
            <param name="verb">Verb to add</param>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.AddChild(LAIR.ResourceAPIs.VerbNet.VerbClass)">
            <summary>
            Adds a child class to this class
            </summary>
            <param name="child">Child class to add</param>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.GetChildren(System.Boolean)">
            <summary>
            Gets child classes of this class
            </summary>
            <param name="recursive">Whether or not to retrieve classes recursively</param>
            <returns>Verb classes</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.GetChildrenRecursive(LAIR.Collections.Generic.Set{LAIR.ResourceAPIs.VerbNet.VerbClass}@)">
            <summary>
            Gets child classes recursively without creating many new Set objects
            </summary>
            <param name="children">Current list of child classes</param>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.GetVerbs(System.Boolean)">
            <summary>
            Gets verbs in this class
            </summary>
            <param name="recursive">Whether or not to recursively get verbs from all children</param>
            <returns>Set of verbs</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.AddThematicRole(LAIR.ResourceAPIs.VerbNet.VerbNetEngine.ThematicRole)">
            <summary>
            Adds a thematic role to this class
            </summary>
            <param name="role">Role to add</param>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.ContainsThematicRole(LAIR.ResourceAPIs.VerbNet.VerbNetEngine.ThematicRole,System.Boolean)">
            <summary>
            Checks whether this class has a thematic role
            </summary>
            <param name="role">Role to check for</param>
            <param name="includeInherited">Whether or not to include inherited roles</param>
            <returns>True if role is present and false otherwise</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.GetThematicRoles(System.Boolean)">
            <summary>
            Gets thematic roles in this class
            </summary>
            <param name="includeInherited">Whether or not to include inherited roles</param>
            <returns>Thematic roles</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.AddExample(System.String)">
            <summary>
            Adds an example to this class
            </summary>
            <param name="example">Example to add</param>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.GetExamples(System.Boolean)">
            <summary>
            Gets examples from this class
            </summary>
            <param name="includeInherited">Whether or not to include inherited examples</param>
            <returns>Examples</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.GetLowestCommonAncestor(LAIR.ResourceAPIs.VerbNet.VerbClass)">
            <summary>
            Gets the lowest common ancestor between this class and another
            </summary>
            <param name="verbClass">Other class</param>
            <returns>Lowest common ancestor</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.GetPathTo(LAIR.ResourceAPIs.VerbNet.VerbClass)">
            <summary>
            Gets the VerbClass path from this class to another class
            </summary>
            <param name="verbClass">Destination class</param>
            <returns>Sequence of verb classes representing the path</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.GetHierarchicalSimilarityWith(LAIR.ResourceAPIs.VerbNet.VerbClass)">
            <summary>
            Gets a simple measure of similarity between the current class and another class. The formula:  2 * depth(lca) / (depth(current) + depth(other)).
            This is similar to the Wu and Palmer (1994) metric for WordNet synset similarity.
            </summary>
            <param name="verbClass"></param>
            <returns></returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.Contains(System.String)">
            <summary>
            Gets whether or not this class contains a verb
            </summary>
            <param name="verb">Verb to check for</param>
            <returns>True if verb is present and false otherwise</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.Equals(System.Object)">
            <summary>
            Checks whether this verb class equals another
            </summary>
            <param name="obj">Other verb class to compare with</param>
            <returns>True if classes are equal and false otherwise</returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.GetHashCode">
            <summary>
            Gets the hash code for this class
            </summary>
            <returns></returns>
        </member>
        <member name="M:LAIR.ResourceAPIs.VerbNet.VerbClass.ToString">
            <summary>
            Gets ID of class
            </summary>
            <returns>ID of class</returns>
        </member>
        <member name="P:LAIR.ResourceAPIs.VerbNet.VerbClass.DisplayVerbsInToString">
            <summary>
            Gets or sets whether or not to display verbs in the return value for ToString (default:  false)
            </summary>
        </member>
        <member name="P:LAIR.ResourceAPIs.VerbNet.VerbClass.ID">
            <summary>
            Gets the ID of this class
            </summary>
        </member>
        <member name="P:LAIR.ResourceAPIs.VerbNet.VerbClass.Parent">
            <summary>
            Gets the parent of this class
            </summary>
        </member>
        <member name="P:LAIR.ResourceAPIs.VerbNet.VerbClass.IsRoot">
            <summary>
            Gets whether or not this class is a root class
            </summary>
        </member>
        <member name="P:LAIR.ResourceAPIs.VerbNet.VerbClass.Depth">
            <summary>
            Gets one-based depth of current class (root has depth of 1)
            </summary>
        </member>
        <member name="P:LAIR.ResourceAPIs.VerbNet.VerbClass.ShallowestAncestorWithVerbs">
            <summary>
            Gets the shallowest ancestor of this class that has one or more verbs
            </summary>
        </member>
    </members>
</doc>
