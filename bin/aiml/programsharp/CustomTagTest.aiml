<?xml version="1.0" encoding="ISO-8859-1"?>
<aiml>
<!-- Free software &copy; 2001-2003 2001 ALICE  AI Foundation. -->
<!-- This program is open source code released under -->
<!-- the terms of the GNU General Public License     -->
<!-- as published by the Free Software Foundation.   -->
<!-- Mostly complies with AIML1.01 Tag Set Specification -->
<!-- as adopted by the ALICE A.I. Foundation.  -->
<!-- Annotated Version updated September 2003 -->
<!-- Cyc Version updated May 2009 -->

<!-- custom tag tests -->
<category><pattern>CUSTOM TAG FORTUNE</pattern><template><fortunecookie/></template></category>
<category><pattern>CUSTOM TAG PIG LATIN *</pattern><template><piglatin><star/></piglatin></template></category>
<category><pattern>CUSTOM TAG NEWS</pattern><template><news/></template></category>
<!-- CUSTOM TAG CYCQUERY (#$isa ?X #$Dog) -->
<category><pattern>CUSTOM TAG CYCQUERY *</pattern><template><cycquery varname="?X"><star/></cycquery></template></category>
<!-- CUSTOM TAG CYCTERM puppy   ====> (#$JuvenileFn #$Dog) -->
<category><pattern>CUSTOM TAG CYCTERM *</pattern><template><cycterm><star/></cycterm></template></category>
<!-- CUSTOM TAG CYCPHRASE (#$JuvenileFn #$Dog)   ====>  puppy -->
<category><pattern>CUSTOM TAG CYCPHRASE *</pattern><template><cycphrase><star/></cycphrase></template></category>
<!-- CUSTOM TAG CYCASSERT (#$isa ,(find-or-create-constant "CartoonDog777") #$Dog) #$AimlContextMt -->
<category><pattern>CUSTOM TAG CYCASSERT *</pattern><template><cycassert><star/></cycassert></template></category>
<!-- CUSTOM TAG CYCRETRACT (#$isa ,(find-or-create-constant "CartoonDog777") #$Dog) #$AimlContextMt -->
<category><pattern>CUSTOM TAG CYCRETRACT *</pattern><template><cycretract><star/></cycretract></template></category>
<category><pattern>CUSTOM TAG GUARD *</pattern><template><guard><star/></guard></template></category>
<!--CUSTOM TAG CYCRANDOMP (ask-template '?REPLY '(#$isa   ?REPLY   #$Dog) #$EverythingPSC)-->
<category><pattern>CUSTOM TAG CYCRANDOMP *</pattern><template><cycrandom filter="paraphrase"><star/></cycrandom></template></category>
<!--CUSTOM TAG CYCRANDOM (ask-template '?REPLY '(#$isa   ?REPLY   #$Dog) #$EverythingPSC)-->
<category><pattern>CUSTOM TAG CYCRANDOM *</pattern><template><cycrandom><star/></cycrandom></template></category>
<!--CUSTOM TAG CYCSYSTEM (ask-template '?REPLY '(#$isa   ?REPLY   #$Dog) #$EverythingPSC))-->
<category><pattern>CUSTOM TAG CYCSYSTEM *</pattern><template><cycsystem><star/></cycsystem></template></category>
<!--CUSTOM TAG SYSTEM look 5-->
<category><pattern>CUSTOM TAG SYSTEM *</pattern><template><system><star/></system></template></category>
  
  <!--Multiple patterns-->

  <category>
    <pattern>FABULOUS</pattern>
    <pattern>* FABULOUS</pattern>
    <pattern>FABULOUS *</pattern>
    <pattern>* FABULOUS *</pattern>
    <template>
      Your sentence "<get name="rawinput"/>" was fabulous!
    </template>
  </category>
  
  

  <category>
    <pattern>* RAW INPUT</pattern>
    <template>
      Your sentence "<get name="rawinput"/>" was fabulous!
    </template>
  </category>

  <category>
    <pattern>PATTERN A TEST</pattern>
    <pattern>PATTERN B TEST</pattern>
    <template>
      <person>Pattern A or B test.</person>
    </template>
  </category>


  <category>
     <pattern>INITSLT</pattern>
     <template>
       <think>
         <set name="uname">hacker</set>
         <set name="urelation">programmer</set>
         <set name="botrelation">droid</set>
       </think>
     </template>
   </category>
   <category>
   <pattern>TEST1</pattern>
   <template>
    <random>
     <li> A1 <get name="uname"/> </li>
     <li> A2 <get name="uname"/> </li>
     <li> A3 <get name="uname"/> </li>
     <li> A4 </li>
    </random>
   </template>
   </category>

 <!-- star vs dash at end
  
textform> <bot name="~genotype"/> test lineending 1
Found the hyphen. star= 1
textform> <bot name="~genotype"/> test lineending 1 2
Found the star. star= 1 2
textform> <bot name="~genotype"/> test lineending 1 2 3 done
Found the star+done. star= 1 2 3
textform> <bot name="~genotype"/> test lineending 1 done
Found the hyphen+done. star= 1
    
  -->
  <category>
    <pattern>TEST LINEENDING _</pattern>
    <template>
      Found the hyphen. star=<star/>
    </template>
  </category>
  <category>
    <pattern>TEST LINEENDING _ done</pattern>
    <template>
      Found the hyphen+done. star=<star/>
    </template>
  </category>
  <category>
    <pattern>TEST LINEENDING *</pattern>
    <template>
      Found the star. star=<star/>
    </template>
  </category>
  <category>
    <pattern>TEST LINEENDING * done</pattern>
    <template>
      Found the star+done. star=<star/>
    </template>
  </category>


  <!--TOPICSTAR-->
  <category>
    <pattern>DO THE TOPICSTAR EXAMPLE</pattern>
    <template>Alright. How is the weather today?</template>
  </category>
  <category>
    <pattern>THE WEATHER IS *</pattern>
    <template>
      So is it going to be a <set name="topic">
        <star/> day
      </set>?
    </template>
  </category>
  <topic name="* DAY">
    <category>
      <pattern>I THINK SO</pattern>
      <template>
        What do you think of <topicstar/> days?
      </template>
    </category>
  </topic>

  <!--FULL STAR TOPIC-->
  <topic name="* _">
    <category>
      <pattern>
        TOPICAIML
      </pattern>
      <template>
        Indeed Topic is <topicstar/>
      </template>
    </category>
  </topic>

  <!--PATTERN OR-->
  <category>
    <pattern>
      A _ B * <or>C D</or> _
    </pattern>
    <template>
      star1='<star/>' star2='<star index="2"/>' star3='<star index="3"/>' star4='<star index="4"/>'
    </template>
  </category>

  <!--PATTERN STAR-->
  <category>
    <pattern>
      AAA <star/>
    </pattern>
    <template>
      star1='<star/>'
    </template>
  </category>

  <!--PATTERN OPTIONAL STAR-->
  <category>
    <pattern>
      AAB <star>
        <optional>1 2</optional>
      </star>
    </pattern>
    <template>
      star1='<star/>'
    </template>
  </category>

  <!--PATTERN OPTIONAL STAR-->
  <category>
    <pattern>
      AABA <star>
        <optional>1 2</optional>
        <optional>3 4</optional>
      </star>
    </pattern>
    <template>
      star1='<star/>'
    </template>
  </category>

  <!--PATTERN ISA NUMBER-->
  <category>
    <pattern>
      AAC <isa>Number</isa>
    </pattern>
    <template>
      number='<star/>'
    </template>
  </category>

  <!--PATTERN BOT-->
  <category>
    <pattern>
      AAD <bot name="lastname"/>
    </pattern>
    <template>AAD True</template>
  </category>

  <!--PATTERN BOT-->
  <category>
    <pattern>
      AAAD <star>
        <bot name="name"/>
      </star> CC
    </pattern>
    <template>AAAD True CC</template>
  </category>

  <!-- follow command A B C COMEHERE 2-->
  <category>
    <pattern>FOLLOW ME</pattern>
    <pattern>
      COME HERE <bot>name</bot>
    </pattern>
    <pattern>
      A B C COMEHERE <system lang="lisp">(+ 1 1)</system>
    </pattern>
    <template>
      <think>
        <system>
          follow "<get name="name"/>"
        </system>
      </think>Ok, I am following you <get name="name"/>
    </template>
  </category>


  <!-- testing get star hack -->
  <category>
    <pattern>TAG GET *</pattern>
    <template>
      <star index="1"/>=<get><star index="1"/></get>
    </template>
  </category>

  <!-- testing set star hack -->
  <category>
    <pattern>TAG SET _ *</pattern>
    <template>
      Setting <star index="1"/> was <get><star index="1"/></get>
      setting to 
       <set>
        <star index="1"/>
        <star index="2"/>
      </set>.
    </template>
  </category>


  <!-- testing that matching with a br -->
  <category>
    <pattern>TEST THAT BR</pattern>
    <template>
      the test begins repeat the following<br/>abct 123
    </template>
  </category>
  <category>
    <pattern>abct 123<that>abct 123</that></pattern>
    <template>   Good job!     </template>
  </category>

  <!-- testing guard -->
<category><pattern>CUSTOM TAG GUARDTF</pattern><template>guard1 <guard>NIL</guard></template></category>
<category><pattern>CUSTOM TAG GUARDTF</pattern><template>guard2 <guard>T</guard></template></category>
<category><pattern>CUSTOM TAG GUARDTF</pattern><template>guard3 <guard>T</guard></template></category>
<category><pattern>CUSTOM TAG GUARDTF</pattern><template>guard4 <guard>NIL</guard></template></category>

 <!--THATSTAR-->
  <category>
    <pattern>DO THE THATSTAR EXAMPLE</pattern>
    <template>Ok. It'll be a bit silly, though.</template>
  </category>
  <category>
    <pattern>WHY SO</pattern>
    <that>* IT WILL BE * THOUGH</that>
    <template>
      This kind of arranged dialogue is always <thatstar index="2"/>.
    </template>
  </category>


 <!--THAT22-->
  <category>
    <pattern>THAT22</pattern>
    <template>Ok. It'll be a bit silly, though.<br/>
    THAT22
    <br/>Guess what?</template>
  </category>
  <category>
    <pattern>WHAT2</pattern>
    <that>Guess what</that>
    <template>Chicken Butt!</template>
  </category>

  <!--RANDOM-->
  <category>
    <pattern>DO THE RANDOM EXAMPLE</pattern>
    <template>
      <random>
        <li>This is the first random example.</li>
        <li>This is the second random example.</li>
        <li>This is the third random example.</li>
      </random>
    </template>
  </category>
  
  <!--GENDER-->
  <category>
    <pattern>DO THE GENDER TEST</pattern>
    <template>
      <gender>He will do the test for her.</gender>
    </template>
  </category>
  
  <!--PERSON-->
  <category>
    <pattern>DO THE PERSON TEST</pattern>
    <template>
      <person>I will do the test for him.</person>
    </template>
  </category>

  <!--PERSON2-->
  <category>
    <pattern>DO THE PERSON2 TEST</pattern>
    <template>
      <person2>You will do the test for me.</person2>
    </template>
  </category>
  
  <!--LEARN-->
  <category>
    <pattern>LEARN THIS RESOURCE *</pattern>
    <template>
      <learn>
        <star/>
      </learn>Ok.
    </template>
  </category>

  <!--
    Example for testing the wildcard-matching behaviour against empty srings. The expected result is that the first category get matched, but the recursive step returns only the empty string.
  <category>
    <pattern>THANK YOU *</pattern>
    <template>
      Why, you're welcome! <sr/>
    </template>
  </category>
  <category>
    <pattern>I AM HAPPY * IS *</pattern>
    <template>
      Yes, I am happy for <star index="1"/> being <star index="2"/> as well.
    </template>
  </category>
  -->

  <!--ID-->
  <category>
    <pattern>WHAT IS YOUR ID</pattern>
    <template>
      My id is <id/>.
    </template>
  </category>

  <!--THATTOPIC-->
  <topic name="LIKE">
    <category>
      <pattern>YES</pattern>
      <that>DO YOU LIKE CHEESE</that>
      <template>
        Good for you.<think>
          <set name="topic">*</set>
        </think>
      </template>
    </category>
  </topic>
  <category>
    <pattern>WHAT DO YOU WANT TO KNOW</pattern>
    <template>
      Do you <set name="topic">like</set> cheese?
    </template>
  </category>
  <!--
  <category>
    <pattern>YES</pattern>
    <template>"Yes" what?</template>
  </category>
  -->
  <category>
    <pattern>YES</pattern>
    <that>DO YOU LIKE CAKE</that>
    <template>I couldn't care less.</template>
  </category>
  
  <!--CONDITION-->
  <category>
    <pattern>FIRST BLOCK CONDITION TEST</pattern>
    <template>
      <think>
        <set name="block.condition">on</set>
      </think>
      <condition name="block.condition" value="ON">
        The block condition is working.
      </condition>
    </template>
  </category>
  <category>
    <pattern>SECOND BLOCK CONDITION TEST</pattern>
    <template>
      <think>
        <set name="block.condition">on</set>
      </think>
      The block condition is
      <condition name="block.condition" value="OFF">
        not
      </condition>
      working.
    </template>
  </category>
  <category>
    <pattern>THIRD BLOCK CONDITION TEST</pattern>
    <template>
      <think>
        <set name="block.condition">on</set>
      </think>
      The block condition
      <condition name="block.condition">
        <li value="ON">is</li>
        <li>not</li>
      </condition>
      working.
    </template>
  </category>
  <category>
    <pattern>FOURTH BLOCK CONDITION TEST</pattern>
    <template>
      <think>
        <set name="block.condition">on</set>
      </think>
      The block condition
      <condition name="block.condition">
        <li value="OFF">is not</li>
        <li>is</li>
      </condition>
      working.
    </template>
  </category>
  <category>
    <pattern>FIFTH BLOCK CONDITION TEST</pattern>
    <template>
      <think>
        <set name="block.condition">on</set>
      </think>
      The block condition
      <condition>
        <li name="block.condition" value="ON">is</li>
        <li>not</li>
      </condition>
      working.
    </template>
  </category>
  <category>
    <pattern>SIXTH BLOCK CONDITION TEST</pattern>
    <template>
      <think>
        <set name="block.condition">on</set>
      </think>
      The block condition
      <condition>
        <li name="block.condition" value="OFF">is not</li>
        <li>is</li>
      </condition>
      working.
    </template>
  </category>

  <!--VERSION-->
  <category>
    <pattern>WHAT IS YOUR VERSION</pattern>
    <template>
      My current version is <version/>.
    </template>
  </category>
  
  
</aiml>
