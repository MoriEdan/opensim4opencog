<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenMetaverse.StructuredData</name>
    </assembly>
    <members>
        <member name="T:OpenMetaverse.StructuredData.OSDParser">
            <summary>
            
            </summary>
            <summary>
            
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.DeserializeLLSDXml(System.Byte[])">
            <summary>
            
            </summary>
            <param name="xmlData"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.DeserializeLLSDXml(System.String)">
            <summary>
            
            </summary>
            <param name="xmlData"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.DeserializeLLSDXml(System.Xml.XmlTextReader)">
            <summary>
            
            </summary>
            <param name="xmlData"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.SerializeLLSDXmlBytes(OpenMetaverse.StructuredData.OSD)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.SerializeLLSDXmlString(OpenMetaverse.StructuredData.OSD)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.SerializeLLSDXmlElement(System.Xml.XmlTextWriter,OpenMetaverse.StructuredData.OSD)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="data"></param>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.TryValidateLLSDXml(System.Xml.XmlTextReader,System.String@)">
            <summary>
            
            </summary>
            <param name="xmlData"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.ParseLLSDXmlElement(System.Xml.XmlTextReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.DeserializeLLSDBinary(System.Byte[])">
            <summary>
            Deserializes binary LLSD
            </summary>
            <param name="binaryData">Serialized data</param>
            <returns>OSD containting deserialized data</returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.DeserializeLLSDBinary(System.IO.Stream)">
            <summary>
            Deserializes binary LLSD
            </summary>
            <param name="stream">Stream to read the data from</param>
            <returns>OSD containting deserialized data</returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.SerializeLLSDBinary(OpenMetaverse.StructuredData.OSD)">
            <summary>
            Serializes OSD to binary format. It does no prepend header
            </summary>
            <param name="osd">OSD to serialize</param>
            <returns>Serialized data</returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.SerializeLLSDBinary(OpenMetaverse.StructuredData.OSD,System.Boolean)">
            <summary>
            Serializes OSD to binary format
            </summary>
            <param name="osd">OSD to serialize</param>
            <param name="prependHeader"></param>
            <returns>Serialized data</returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.SerializeLLSDBinaryStream(OpenMetaverse.StructuredData.OSD)">
            <summary>
            Serializes OSD to binary format. It does no prepend header
            </summary>
            <param name="data">OSD to serialize</param>
            <returns>Serialized data</returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.SerializeLLSDBinaryStream(OpenMetaverse.StructuredData.OSD,System.Boolean)">
            <summary>
            Serializes OSD to binary format
            </summary>
            <param name="data">OSD to serialize</param>
            <param name="prependHeader"></param>
            <returns>Serialized data</returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.SkipWhiteSpace(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.FindByte(System.IO.Stream,System.Byte)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="toFind"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.FindString(System.IO.Stream,System.String)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="toFind"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.ConsumeBytes(System.IO.Stream,System.Int32)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="consumeBytes"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.NetworkToHostInt(System.Byte[])">
            <summary>
            
            </summary>
            <param name="binaryNetEnd"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.NetworkToHostDouble(System.Byte[])">
            <summary>
            
            </summary>
            <param name="binaryNetEnd"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.HostToNetworkIntBytes(System.Int32)">
            <summary>
            
            </summary>
            <param name="intHostEnd"></param>
            <returns></returns>   
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.DeserializeLLSDNotationElement(System.IO.StringReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.PeekAndSkipWhitespace(System.IO.StringReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.ReadAndSkipWhitespace(System.IO.StringReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.GetLengthInBrackets(System.IO.StringReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.GetStringDelimitedBy(System.IO.StringReader,System.Char)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.BufferCharactersEqual(System.IO.StringReader,System.Char[],System.Int32)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="buffer"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.UnescapeCharacter(System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDParser.EscapeCharacter(System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSDType">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenMetaverse.StructuredData.OSDType.Unknown">
            <summary></summary>
        </member>
        <member name="F:OpenMetaverse.StructuredData.OSDType.Boolean">
            <summary></summary>
        </member>
        <member name="F:OpenMetaverse.StructuredData.OSDType.Integer">
            <summary></summary>
        </member>
        <member name="F:OpenMetaverse.StructuredData.OSDType.Real">
            <summary></summary>
        </member>
        <member name="F:OpenMetaverse.StructuredData.OSDType.String">
            <summary></summary>
        </member>
        <member name="F:OpenMetaverse.StructuredData.OSDType.UUID">
            <summary></summary>
        </member>
        <member name="F:OpenMetaverse.StructuredData.OSDType.Date">
            <summary></summary>
        </member>
        <member name="F:OpenMetaverse.StructuredData.OSDType.URI">
            <summary></summary>
        </member>
        <member name="F:OpenMetaverse.StructuredData.OSDType.Binary">
            <summary></summary>
        </member>
        <member name="F:OpenMetaverse.StructuredData.OSDType.Map">
            <summary></summary>
        </member>
        <member name="F:OpenMetaverse.StructuredData.OSDType.Array">
            <summary></summary>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSDException">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSD">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSD.SerializeMembers(System.Object)">
            <summary>
            Uses reflection to create an SDMap from all of the SD
            serializable types in an object
            </summary>
            <param name="obj">Class or struct containing serializable types</param>
            <returns>An SDMap holding the serialized values from the
            container object</returns>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSD.DeserializeMembers(System.Object@,OpenMetaverse.StructuredData.OSDMap)">
            <summary>
            Uses reflection to deserialize member variables in an object from
            an SDMap
            </summary>
            <param name="obj">Reference to an object to fill with deserialized
            values</param>
            <param name="serialized">Serialized values to put in the target
            object</param>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSDNull">
            <summary>
            This is a wrapper of unknown objects or Null
            </summary>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSDBoolean">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSDInteger">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSDReal">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSDString">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSDUUID">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSDDate">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSDUri">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSDBinary">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSDMap">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDMap.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDMap.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
                            </param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
                            </exception>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDMap.TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <returns>
            true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"/> contains an element with the specified key; otherwise, false.
            </returns>
            <param name="key">The key whose value to get.
                            </param><param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value"/> parameter. This parameter is passed uninitialized.
                            </param><exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.
                            </exception>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDMap.Add(System.String,System.Object)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <param name="key">The object to use as the key of the element to add.
                            </param><param name="value">The object to use as the value of the element to add.
                            </param><exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.
                            </exception><exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2"/>.
                            </exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"/> is read-only.
                            </exception>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDMap.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
                            </param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
                            </exception>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDMap.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
                            </param>
        </member>
        <member name="M:OpenMetaverse.StructuredData.OSDMap.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.
                            </param><param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.
                            </param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.
                            </exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.
                            </exception><exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.
                                -or-
                            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
                                -or-
                                The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
                                -or-
                                Type <paramref name="T"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.
                            </exception>
        </member>
        <member name="P:OpenMetaverse.StructuredData.OSDMap.System#Collections#Generic#IDictionary{System#String@System#Object}#Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection`1"/> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
        <member name="P:OpenMetaverse.StructuredData.OSDMap.System#Collections#Generic#IDictionary{System#String@System#Object}#Item(System.String)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <returns>
            The element with the specified key.
            </returns>
            <param name="key">The key of the element to get or set.
                            </param><exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.
                            </exception><exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key"/> is not found.
                            </exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IDictionary`2"/> is read-only.
                            </exception>
        </member>
        <member name="T:OpenMetaverse.StructuredData.OSDArray">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
