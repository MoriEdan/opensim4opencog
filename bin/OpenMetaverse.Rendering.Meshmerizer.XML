<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenMetaverse.Rendering.Meshmerizer</name>
    </assembly>
    <members>
        <member name="T:OpenMetaverse.Rendering.MeshmerizerR">
            <summary>
            Meshing code based on the Idealist Viewer (20081213).
            </summary>
        </member>
        <member name="M:OpenMetaverse.Rendering.MeshmerizerR.GenerateSimpleMesh(OpenMetaverse.Primitive,OpenMetaverse.Rendering.DetailLevel)">
            <summary>
            Generates a basic mesh structure from a primitive
            </summary>
            <param name="prim">Primitive to generate the mesh from</param>
            <param name="lod">Level of detail to generate the mesh at</param>
            <returns>The generated mesh or null on failure</returns>
        </member>
        <member name="M:OpenMetaverse.Rendering.MeshmerizerR.GenerateSimpleSculptMesh(OpenMetaverse.Primitive,System.Drawing.Bitmap,OpenMetaverse.Rendering.DetailLevel)">
            <summary>
            Generates a basic mesh structure from a sculpted primitive
            </summary>
            <param name="prim">Sculpted primitive to generate the mesh from</param>
            <param name="sculptTexture">Sculpt texture</param>
            <param name="lod">Level of detail to generate the mesh at</param>
            <returns>The generated mesh or null on failure</returns>
        </member>
        <member name="M:OpenMetaverse.Rendering.MeshmerizerR.GenerateFacetedMesh(OpenMetaverse.Primitive,OpenMetaverse.Rendering.DetailLevel)">
            <summary>
            Generates a a series of faces, each face containing a mesh and
            metadata
            </summary>
            <param name="prim">Primitive to generate the mesh from</param>
            <param name="lod">Level of detail to generate the mesh at</param>
            <returns>The generated mesh</returns >
        </member>
        <member name="M:OpenMetaverse.Rendering.MeshmerizerR.GenerateFacetedSculptMesh(OpenMetaverse.Primitive,System.Drawing.Bitmap,OpenMetaverse.Rendering.DetailLevel)">
            <summary>
            Create a sculpty faceted mesh. The actual scuplt texture is fetched and passed to this
            routine since all the context for finding teh texture is elsewhere.
            </summary>
            <returns>The faceted mesh or null if can't do it</returns>
        </member>
        <member name="M:OpenMetaverse.Rendering.MeshmerizerR.TransformTexCoords(System.Collections.Generic.List{OpenMetaverse.Rendering.Vertex},OpenMetaverse.Vector3,OpenMetaverse.Primitive.TextureEntryFace,OpenMetaverse.Vector3)">
            <summary>
            Apply texture coordinate modifications from a
            <seealso cref="!:TextureEntryFace"/> to a list of vertices
            </summary>
            <param name="vertices">Vertex list to modify texture coordinates for</param>
            <param name="center">Center-point of the face</param>
            <param name="teFace">Face texture parameters</param>
        </member>
        <member name="M:OpenMetaverse.Rendering.MeshmerizerR.TerrainMesh(System.Single[0:,0:],System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Method for generating mesh Face from a heightmap
            </summary>
            <param name="zMap">Two dimension array of floats containing height information</param>
            <param name="xBegin">Starting value for X</param>
            <param name="xEnd">Max value for X</param>
            <param name="yBegin">Starting value for Y</param>
            <param name="yEnd">Max value of Y</param>
            <returns></returns>
        </member>
    </members>
</doc>
