//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectHoshimi.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ProjectHoshimi.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build.
        /// </summary>
        internal static string ActionBuild {
            get {
                return ResourceManager.GetString("ActionBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action lets the AI build a unit of the specified type..
        /// </summary>
        internal static string ActionBuildDesc {
            get {
                return ResourceManager.GetString("ActionBuildDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unit To Build.
        /// </summary>
        internal static string ActionBuildUnitType {
            get {
                return ResourceManager.GetString("ActionBuildUnitType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of unit which will be built..
        /// </summary>
        internal static string ActionBuildUnitTypeDesc {
            get {
                return ResourceManager.GetString("ActionBuildUnitTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Focus Closest.
        /// </summary>
        internal static string ActionFocusClosest {
            get {
                return ResourceManager.GetString("ActionFocusClosest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The unit will focus the closest object of the given type..
        /// </summary>
        internal static string ActionFocusClosestDesc {
            get {
                return ResourceManager.GetString("ActionFocusClosestDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unit To Focus.
        /// </summary>
        internal static string ActionFocusClosestUnitType {
            get {
                return ResourceManager.GetString("ActionFocusClosestUnitType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the units which will be considered to be focused..
        /// </summary>
        internal static string ActionFocusClosestUnitTypeDesc {
            get {
                return ResourceManager.GetString("ActionFocusClosestUnitTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Follow Focus.
        /// </summary>
        internal static string ActionFollowFocus {
            get {
                return ResourceManager.GetString("ActionFollowFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The unit will follow the focused object. If no object is focused, the action fails..
        /// </summary>
        internal static string ActionFollowFocusDesc {
            get {
                return ResourceManager.GetString("ActionFollowFocusDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inherit Focus.
        /// </summary>
        internal static string ActionInheritFocus {
            get {
                return ResourceManager.GetString("ActionInheritFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The unit will focus the focus of its focus..
        /// </summary>
        internal static string ActionInheritFocusDesc {
            get {
                return ResourceManager.GetString("ActionInheritFocusDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move Until Focus Is In Range.
        /// </summary>
        internal static string ActionMoveTillFocusIsInRange {
            get {
                return ResourceManager.GetString("ActionMoveTillFocusIsInRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The unit moves towards the object is has focused and stops if it comes in attack/build range..
        /// </summary>
        internal static string ActionMoveTillFocusIsInRangeDesc {
            get {
                return ResourceManager.GetString("ActionMoveTillFocusIsInRangeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transfer Oxygen From Focus.
        /// </summary>
        internal static string ActionTransferOxygenFromFocus {
            get {
                return ResourceManager.GetString("ActionTransferOxygenFromFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action transfers oxygen from the focused object into the units cargo..
        /// </summary>
        internal static string ActionTransferOxygenFromFocusDesc {
            get {
                return ResourceManager.GetString("ActionTransferOxygenFromFocusDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transfer Oxygen To Focus.
        /// </summary>
        internal static string ActionTransferOxygenToFocus {
            get {
                return ResourceManager.GetString("ActionTransferOxygenToFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oxygen is transferred from the units cargo to the focused object..
        /// </summary>
        internal static string ActionTransferOxygenToFocusDesc {
            get {
                return ResourceManager.GetString("ActionTransferOxygenToFocusDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cargo Is Full.
        /// </summary>
        internal static string ConditionCargoIsFull {
            get {
                return ResourceManager.GetString("ConditionCargoIsFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checks if the cargo of the unit is completely full..
        /// </summary>
        internal static string ConditionCargoIsFullDesc {
            get {
                return ResourceManager.GetString("ConditionCargoIsFullDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Focus Is.
        /// </summary>
        internal static string ConditionFocusIs {
            get {
                return ResourceManager.GetString("ConditionFocusIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checks if the currently focused object is of the specified type..
        /// </summary>
        internal static string ConditionFocusIsDesc {
            get {
                return ResourceManager.GetString("ConditionFocusIsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Focus Type.
        /// </summary>
        internal static string ConditionFocusIsUnitType {
            get {
                return ResourceManager.GetString("ConditionFocusIsUnitType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This condition is true if the focused unit is of this type..
        /// </summary>
        internal static string ConditionFocusIsUnitTypeDesc {
            get {
                return ResourceManager.GetString("ConditionFocusIsUnitTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Has Less Than.
        /// </summary>
        internal static string ConditionHasLessThan {
            get {
                return ResourceManager.GetString("ConditionHasLessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unit Count.
        /// </summary>
        internal static string ConditionHasLessThanCount {
            get {
                return ResourceManager.GetString("ConditionHasLessThanCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This condition is true if the layer has less than this many units of the given type..
        /// </summary>
        internal static string ConditionHasLessThanCountDesc {
            get {
                return ResourceManager.GetString("ConditionHasLessThanCountDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This condition is true if the AI has less than n units of the specified type..
        /// </summary>
        internal static string ConditionHasLessThanDesc {
            get {
                return ResourceManager.GetString("ConditionHasLessThanDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unit Type.
        /// </summary>
        internal static string ConditionHasLessThanUnitType {
            get {
                return ResourceManager.GetString("ConditionHasLessThanUnitType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the units which are counted..
        /// </summary>
        internal static string ConditionHasLessThanUnitTypeDesc {
            get {
                return ResourceManager.GetString("ConditionHasLessThanUnitTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Has Needle With Less Servants Than.
        /// </summary>
        internal static string ConditionHasNeedleWithLessServantsThan {
            get {
                return ResourceManager.GetString("ConditionHasNeedleWithLessServantsThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This condition is true if the AI has a needle with less than n transporters assigned to it. If four transporters are assigned to a needle, it is fully charged..
        /// </summary>
        internal static string ConditionHasNeedleWithLessServantsThanDesc {
            get {
                return ResourceManager.GetString("ConditionHasNeedleWithLessServantsThanDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Servants.
        /// </summary>
        internal static string ConditionHasNeedleWithLessServantsThanServants {
            get {
                return ResourceManager.GetString("ConditionHasNeedleWithLessServantsThanServants", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This condition is true if any of the player&apos;s needles has less than n suppliers..
        /// </summary>
        internal static string ConditionHasNeedleWithLessServantsThanServantsDesc {
            get {
                return ResourceManager.GetString("ConditionHasNeedleWithLessServantsThanServantsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loop.
        /// </summary>
        internal static string DecoratorLoop {
            get {
                return ResourceManager.GetString("DecoratorLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Count.
        /// </summary>
        internal static string DecoratorLoopCount {
            get {
                return ResourceManager.GetString("DecoratorLoopCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines how often the child will be called. If the child fails, the loop is aborted and fails..
        /// </summary>
        internal static string DecoratorLoopCountDesc {
            get {
                return ResourceManager.GetString("DecoratorLoopCountDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This decorator calls its child n times..
        /// </summary>
        internal static string DecoratorLoopDesc {
            get {
                return ResourceManager.GetString("DecoratorLoopDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not.
        /// </summary>
        internal static string DecoratorNot {
            get {
                return ResourceManager.GetString("DecoratorNot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This decorator inverts the return value of the attached node. If the attached node fails, it will appear as it has succedded and vice versa..
        /// </summary>
        internal static string DecoratorNotDesc {
            get {
                return ResourceManager.GetString("DecoratorNotDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successful.
        /// </summary>
        internal static string DecoratorTrue {
            get {
                return ResourceManager.GetString("DecoratorTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This decorator lets it child appear to be valid, even if it fails..
        /// </summary>
        internal static string DecoratorTrueDesc {
            get {
                return ResourceManager.GetString("DecoratorTrueDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Focus Destroyed.
        /// </summary>
        internal static string EventFocusDestroyed {
            get {
                return ResourceManager.GetString("EventFocusDestroyed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This node becomes active if the focus of the unit was destroyed..
        /// </summary>
        internal static string EventFocusDestroyedDesc {
            get {
                return ResourceManager.GetString("EventFocusDestroyedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Focus Unit Type.
        /// </summary>
        internal static string EventFocusDestroyedType {
            get {
                return ResourceManager.GetString("EventFocusDestroyedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the focused unit which needs to be destroyed to trigger this event..
        /// </summary>
        internal static string EventFocusDestroyedTypeDesc {
            get {
                return ResourceManager.GetString("EventFocusDestroyedTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unit Built.
        /// </summary>
        internal static string EventUnitBuilt {
            get {
                return ResourceManager.GetString("EventUnitBuilt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This node is enabled if a unit of the specified type is built..
        /// </summary>
        internal static string EventUnitBuiltDesc {
            get {
                return ResourceManager.GetString("EventUnitBuiltDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Built Unit Type.
        /// </summary>
        internal static string EventUnitBuiltType {
            get {
                return ResourceManager.GetString("EventUnitBuiltType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the unit which needs to be built to trigger this event..
        /// </summary>
        internal static string EventUnitBuiltTypeDesc {
            get {
                return ResourceManager.GetString("EventUnitBuiltTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unit Destroyed.
        /// </summary>
        internal static string EventUnitDestroyed {
            get {
                return ResourceManager.GetString("EventUnitDestroyed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This node becomes active if a unit of the specified type was destroyed..
        /// </summary>
        internal static string EventUnitDestroyedDesc {
            get {
                return ResourceManager.GetString("EventUnitDestroyedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destroyed Unit Type.
        /// </summary>
        internal static string EventUnitDestroyedType {
            get {
                return ResourceManager.GetString("EventUnitDestroyedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the unit which needs to be destroyed to trigger this event..
        /// </summary>
        internal static string EventUnitDestroyedTypeDesc {
            get {
                return ResourceManager.GetString("EventUnitDestroyedTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Impulse.
        /// </summary>
        internal static string Impulse {
            get {
                return ResourceManager.GetString("Impulse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This node is only visible when one of the associated events were fired..
        /// </summary>
        internal static string ImpulseDesc {
            get {
                return ResourceManager.GetString("ImpulseDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actions.
        /// </summary>
        internal static string NodeGroupActions {
            get {
                return ResourceManager.GetString("NodeGroupActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.
        /// </summary>
        internal static string NodeGroupConditions {
            get {
                return ResourceManager.GetString("NodeGroupConditions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decorators.
        /// </summary>
        internal static string NodeGroupDecorators {
            get {
                return ResourceManager.GetString("NodeGroupDecorators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Events.
        /// </summary>
        internal static string NodeGroupEvents {
            get {
                return ResourceManager.GetString("NodeGroupEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Impulses.
        /// </summary>
        internal static string NodeGroupImpulses {
            get {
                return ResourceManager.GetString("NodeGroupImpulses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selectors.
        /// </summary>
        internal static string NodeGroupSelectors {
            get {
                return ResourceManager.GetString("NodeGroupSelectors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sequences.
        /// </summary>
        internal static string NodeGroupSequences {
            get {
                return ResourceManager.GetString("NodeGroupSequences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selector Linear.
        /// </summary>
        internal static string SelectorLinear {
            get {
                return ResourceManager.GetString("SelectorLinear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This node will call its attached nodes in the given order until one succeeds. If all attached nodes fail, this node fails, too..
        /// </summary>
        internal static string SelectorLinearDesc {
            get {
                return ResourceManager.GetString("SelectorLinearDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sequence Linear.
        /// </summary>
        internal static string SequenceLinear {
            get {
                return ResourceManager.GetString("SequenceLinear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This node will call its attached nodes in the given order. If any of the attached nodes fails, this node fails as well..
        /// </summary>
        internal static string SequenceLinearDesc {
            get {
                return ResourceManager.GetString("SequenceLinearDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to n.
        /// </summary>
        internal static string UnitsCount {
            get {
                return ResourceManager.GetString("UnitsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sec.
        /// </summary>
        internal static string UnitsSeconds {
            get {
                return ResourceManager.GetString("UnitsSeconds", resourceCulture);
            }
        }
    }
}
