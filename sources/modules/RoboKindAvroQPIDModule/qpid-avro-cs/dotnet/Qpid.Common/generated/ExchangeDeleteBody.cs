
using Apache.Qpid.Buffer;
using System.Text;

namespace Apache.Qpid.Framing
{
  ///
  /// This class is autogenerated
  /// Do not modify.
  ///
  /// @author Code Generator Script by robert.j.greig@jpmorgan.com
  public class ExchangeDeleteBody : AMQMethodBody , IEncodableAMQDataBlock
  {
    public const int CLASS_ID = 40; 	
    public const int METHOD_ID = 20; 	

    public ushort Ticket;    
    public string Exchange;    
    public bool IfUnused;    
    public bool Nowait;    
     

    protected override ushort Clazz
    {
        get
        {
            return 40;
        }
    }
   
    protected override ushort Method
    {
        get
        {
            return 20;
        }
    }

    protected override uint BodySize
    {
    get
    {
        
        return (uint)
        2 /*Ticket*/+
            (uint)EncodingUtils.EncodedShortStringLength(Exchange)+
            1 /*IfUnused*/+
            0 /*Nowait*/		 
        ;
         
    }
    }

    protected override void WriteMethodPayload(ByteBuffer buffer)
    {
        buffer.Put(Ticket);
            EncodingUtils.WriteShortStringBytes(buffer, Exchange);
            EncodingUtils.WriteBooleans(buffer, new bool[]{IfUnused, Nowait});
            		 
    }

    protected override void PopulateMethodBodyFromBuffer(ByteBuffer buffer)
    {
        Ticket = buffer.GetUInt16();
        Exchange = EncodingUtils.ReadShortString(buffer);
        bool[] bools = EncodingUtils.ReadBooleans(buffer);IfUnused = bools[0];
        Nowait = bools[1];
        		 
    }

    public override string ToString()
    {
        StringBuilder buf = new StringBuilder(base.ToString());
        buf.Append(" Ticket: ").Append(Ticket);
        buf.Append(" Exchange: ").Append(Exchange);
        buf.Append(" IfUnused: ").Append(IfUnused);
        buf.Append(" Nowait: ").Append(Nowait);
         
        return buf.ToString();
    }

    public static AMQFrame CreateAMQFrame(ushort channelId, ushort Ticket, string Exchange, bool IfUnused, bool Nowait)
    {
        ExchangeDeleteBody body = new ExchangeDeleteBody();
        body.Ticket = Ticket;
        body.Exchange = Exchange;
        body.IfUnused = IfUnused;
        body.Nowait = Nowait;
        		 
        AMQFrame frame = new AMQFrame();
        frame.Channel = channelId;
        frame.BodyFrame = body;
        return frame;
    }
} 
}
