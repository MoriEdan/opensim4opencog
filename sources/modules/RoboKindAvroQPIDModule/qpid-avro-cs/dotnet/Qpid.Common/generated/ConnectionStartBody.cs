
using Apache.Qpid.Buffer;
using System.Text;

namespace Apache.Qpid.Framing
{
  ///
  /// This class is autogenerated
  /// Do not modify.
  ///
  /// @author Code Generator Script by robert.j.greig@jpmorgan.com
  public class ConnectionStartBody : AMQMethodBody , IEncodableAMQDataBlock
  {
    public const int CLASS_ID = 10; 	
    public const int METHOD_ID = 10; 	

    public byte VersionMajor;    
    public byte VersionMinor;    
    public FieldTable ServerProperties;    
    public byte[] Mechanisms;    
    public byte[] Locales;    
     

    protected override ushort Clazz
    {
        get
        {
            return 10;
        }
    }
   
    protected override ushort Method
    {
        get
        {
            return 10;
        }
    }

    protected override uint BodySize
    {
    get
    {
        
        return (uint)
        1 /*VersionMajor*/+
            1 /*VersionMinor*/+
            (uint)EncodingUtils.EncodedFieldTableLength(ServerProperties)+
            4 + (uint) (Mechanisms == null ? 0 : Mechanisms.Length)+
            4 + (uint) (Locales == null ? 0 : Locales.Length)		 
        ;
         
    }
    }

    protected override void WriteMethodPayload(ByteBuffer buffer)
    {
        buffer.Put(VersionMajor);
            buffer.Put(VersionMinor);
            EncodingUtils.WriteFieldTableBytes(buffer, ServerProperties);
            EncodingUtils.WriteLongstr(buffer, Mechanisms);
            EncodingUtils.WriteLongstr(buffer, Locales);
            		 
    }

    protected override void PopulateMethodBodyFromBuffer(ByteBuffer buffer)
    {
        VersionMajor = buffer.GetByte();
        VersionMinor = buffer.GetByte();
        ServerProperties = EncodingUtils.ReadFieldTable(buffer);
        Mechanisms = EncodingUtils.ReadLongstr(buffer);
        Locales = EncodingUtils.ReadLongstr(buffer);
        		 
    }

    public override string ToString()
    {
        StringBuilder buf = new StringBuilder(base.ToString());
        buf.Append(" VersionMajor: ").Append(VersionMajor);
        buf.Append(" VersionMinor: ").Append(VersionMinor);
        buf.Append(" ServerProperties: ").Append(ServerProperties);
        buf.Append(" Mechanisms: ").Append(Mechanisms);
        buf.Append(" Locales: ").Append(Locales);
         
        return buf.ToString();
    }

    public static AMQFrame CreateAMQFrame(ushort channelId, byte VersionMajor, byte VersionMinor, FieldTable ServerProperties, byte[] Mechanisms, byte[] Locales)
    {
        ConnectionStartBody body = new ConnectionStartBody();
        body.VersionMajor = VersionMajor;
        body.VersionMinor = VersionMinor;
        body.ServerProperties = ServerProperties;
        body.Mechanisms = Mechanisms;
        body.Locales = Locales;
        		 
        AMQFrame frame = new AMQFrame();
        frame.Channel = channelId;
        frame.BodyFrame = body;
        return frame;
    }
} 
}
