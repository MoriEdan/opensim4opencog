
using Apache.Qpid.Buffer;
using System.Text;

namespace Apache.Qpid.Framing
{
  ///
  /// This class is autogenerated
  /// Do not modify.
  ///
  /// @author Code Generator Script by robert.j.greig@jpmorgan.com
  public class StreamDeliverBody : AMQMethodBody , IEncodableAMQDataBlock
  {
    public const int CLASS_ID = 80; 	
    public const int METHOD_ID = 60; 	

    public string ConsumerTag;    
    public ulong DeliveryTag;    
    public string Exchange;    
    public string Queue;    
     

    protected override ushort Clazz
    {
        get
        {
            return 80;
        }
    }
   
    protected override ushort Method
    {
        get
        {
            return 60;
        }
    }

    protected override uint BodySize
    {
    get
    {
        
        return (uint)
        (uint)EncodingUtils.EncodedShortStringLength(ConsumerTag)+
            8 /*DeliveryTag*/+
            (uint)EncodingUtils.EncodedShortStringLength(Exchange)+
            (uint)EncodingUtils.EncodedShortStringLength(Queue)		 
        ;
         
    }
    }

    protected override void WriteMethodPayload(ByteBuffer buffer)
    {
        EncodingUtils.WriteShortStringBytes(buffer, ConsumerTag);
            buffer.Put(DeliveryTag);
            EncodingUtils.WriteShortStringBytes(buffer, Exchange);
            EncodingUtils.WriteShortStringBytes(buffer, Queue);
            		 
    }

    protected override void PopulateMethodBodyFromBuffer(ByteBuffer buffer)
    {
        ConsumerTag = EncodingUtils.ReadShortString(buffer);
        DeliveryTag = buffer.GetUInt64();
        Exchange = EncodingUtils.ReadShortString(buffer);
        Queue = EncodingUtils.ReadShortString(buffer);
        		 
    }

    public override string ToString()
    {
        StringBuilder buf = new StringBuilder(base.ToString());
        buf.Append(" ConsumerTag: ").Append(ConsumerTag);
        buf.Append(" DeliveryTag: ").Append(DeliveryTag);
        buf.Append(" Exchange: ").Append(Exchange);
        buf.Append(" Queue: ").Append(Queue);
         
        return buf.ToString();
    }

    public static AMQFrame CreateAMQFrame(ushort channelId, string ConsumerTag, ulong DeliveryTag, string Exchange, string Queue)
    {
        StreamDeliverBody body = new StreamDeliverBody();
        body.ConsumerTag = ConsumerTag;
        body.DeliveryTag = DeliveryTag;
        body.Exchange = Exchange;
        body.Queue = Queue;
        		 
        AMQFrame frame = new AMQFrame();
        frame.Channel = channelId;
        frame.BodyFrame = body;
        return frame;
    }
} 
}
