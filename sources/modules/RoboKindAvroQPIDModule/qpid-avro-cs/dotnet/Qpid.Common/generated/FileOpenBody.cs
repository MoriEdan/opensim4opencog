
using Apache.Qpid.Buffer;
using System.Text;

namespace Apache.Qpid.Framing
{
  ///
  /// This class is autogenerated
  /// Do not modify.
  ///
  /// @author Code Generator Script by robert.j.greig@jpmorgan.com
  public class FileOpenBody : AMQMethodBody , IEncodableAMQDataBlock
  {
    public const int CLASS_ID = 70; 	
    public const int METHOD_ID = 40; 	

    public string Identifier;    
    public ulong ContentSize;    
     

    protected override ushort Clazz
    {
        get
        {
            return 70;
        }
    }
   
    protected override ushort Method
    {
        get
        {
            return 40;
        }
    }

    protected override uint BodySize
    {
    get
    {
        
        return (uint)
        (uint)EncodingUtils.EncodedShortStringLength(Identifier)+
            8 /*ContentSize*/		 
        ;
         
    }
    }

    protected override void WriteMethodPayload(ByteBuffer buffer)
    {
        EncodingUtils.WriteShortStringBytes(buffer, Identifier);
            buffer.Put(ContentSize);
            		 
    }

    protected override void PopulateMethodBodyFromBuffer(ByteBuffer buffer)
    {
        Identifier = EncodingUtils.ReadShortString(buffer);
        ContentSize = buffer.GetUInt64();
        		 
    }

    public override string ToString()
    {
        StringBuilder buf = new StringBuilder(base.ToString());
        buf.Append(" Identifier: ").Append(Identifier);
        buf.Append(" ContentSize: ").Append(ContentSize);
         
        return buf.ToString();
    }

    public static AMQFrame CreateAMQFrame(ushort channelId, string Identifier, ulong ContentSize)
    {
        FileOpenBody body = new FileOpenBody();
        body.Identifier = Identifier;
        body.ContentSize = ContentSize;
        		 
        AMQFrame frame = new AMQFrame();
        frame.Channel = channelId;
        frame.BodyFrame = body;
        return frame;
    }
} 
}
