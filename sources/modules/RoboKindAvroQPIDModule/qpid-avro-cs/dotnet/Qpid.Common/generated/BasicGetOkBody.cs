
using Apache.Qpid.Buffer;
using System.Text;

namespace Apache.Qpid.Framing
{
  ///
  /// This class is autogenerated
  /// Do not modify.
  ///
  /// @author Code Generator Script by robert.j.greig@jpmorgan.com
  public class BasicGetOkBody : AMQMethodBody , IEncodableAMQDataBlock
  {
    public const int CLASS_ID = 60; 	
    public const int METHOD_ID = 71; 	

    public ulong DeliveryTag;    
    public bool Redelivered;    
    public string Exchange;    
    public string RoutingKey;    
    public uint MessageCount;    
     

    protected override ushort Clazz
    {
        get
        {
            return 60;
        }
    }
   
    protected override ushort Method
    {
        get
        {
            return 71;
        }
    }

    protected override uint BodySize
    {
    get
    {
        
        return (uint)
        8 /*DeliveryTag*/+
            1 /*Redelivered*/+
            (uint)EncodingUtils.EncodedShortStringLength(Exchange)+
            (uint)EncodingUtils.EncodedShortStringLength(RoutingKey)+
            4 /*MessageCount*/		 
        ;
         
    }
    }

    protected override void WriteMethodPayload(ByteBuffer buffer)
    {
        buffer.Put(DeliveryTag);
            EncodingUtils.WriteBooleans(buffer, new bool[]{Redelivered});
            EncodingUtils.WriteShortStringBytes(buffer, Exchange);
            EncodingUtils.WriteShortStringBytes(buffer, RoutingKey);
            buffer.Put(MessageCount);
            		 
    }

    protected override void PopulateMethodBodyFromBuffer(ByteBuffer buffer)
    {
        DeliveryTag = buffer.GetUInt64();
        bool[] bools = EncodingUtils.ReadBooleans(buffer);Redelivered = bools[0];
        Exchange = EncodingUtils.ReadShortString(buffer);
        RoutingKey = EncodingUtils.ReadShortString(buffer);
        MessageCount = buffer.GetUInt32();
        		 
    }

    public override string ToString()
    {
        StringBuilder buf = new StringBuilder(base.ToString());
        buf.Append(" DeliveryTag: ").Append(DeliveryTag);
        buf.Append(" Redelivered: ").Append(Redelivered);
        buf.Append(" Exchange: ").Append(Exchange);
        buf.Append(" RoutingKey: ").Append(RoutingKey);
        buf.Append(" MessageCount: ").Append(MessageCount);
         
        return buf.ToString();
    }

    public static AMQFrame CreateAMQFrame(ushort channelId, ulong DeliveryTag, bool Redelivered, string Exchange, string RoutingKey, uint MessageCount)
    {
        BasicGetOkBody body = new BasicGetOkBody();
        body.DeliveryTag = DeliveryTag;
        body.Redelivered = Redelivered;
        body.Exchange = Exchange;
        body.RoutingKey = RoutingKey;
        body.MessageCount = MessageCount;
        		 
        AMQFrame frame = new AMQFrame();
        frame.Channel = channelId;
        frame.BodyFrame = body;
        return frame;
    }
} 
}
