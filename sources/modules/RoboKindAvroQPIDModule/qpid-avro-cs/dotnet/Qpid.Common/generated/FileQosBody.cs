
using Apache.Qpid.Buffer;
using System.Text;

namespace Apache.Qpid.Framing
{
  ///
  /// This class is autogenerated
  /// Do not modify.
  ///
  /// @author Code Generator Script by robert.j.greig@jpmorgan.com
  public class FileQosBody : AMQMethodBody , IEncodableAMQDataBlock
  {
    public const int CLASS_ID = 70; 	
    public const int METHOD_ID = 10; 	

    public uint PrefetchSize;    
    public ushort PrefetchCount;    
    public bool Global;    
     

    protected override ushort Clazz
    {
        get
        {
            return 70;
        }
    }
   
    protected override ushort Method
    {
        get
        {
            return 10;
        }
    }

    protected override uint BodySize
    {
    get
    {
        
        return (uint)
        4 /*PrefetchSize*/+
            2 /*PrefetchCount*/+
            1 /*Global*/		 
        ;
         
    }
    }

    protected override void WriteMethodPayload(ByteBuffer buffer)
    {
        buffer.Put(PrefetchSize);
            buffer.Put(PrefetchCount);
            EncodingUtils.WriteBooleans(buffer, new bool[]{Global});
            		 
    }

    protected override void PopulateMethodBodyFromBuffer(ByteBuffer buffer)
    {
        PrefetchSize = buffer.GetUInt32();
        PrefetchCount = buffer.GetUInt16();
        bool[] bools = EncodingUtils.ReadBooleans(buffer);Global = bools[0];
        		 
    }

    public override string ToString()
    {
        StringBuilder buf = new StringBuilder(base.ToString());
        buf.Append(" PrefetchSize: ").Append(PrefetchSize);
        buf.Append(" PrefetchCount: ").Append(PrefetchCount);
        buf.Append(" Global: ").Append(Global);
         
        return buf.ToString();
    }

    public static AMQFrame CreateAMQFrame(ushort channelId, uint PrefetchSize, ushort PrefetchCount, bool Global)
    {
        FileQosBody body = new FileQosBody();
        body.PrefetchSize = PrefetchSize;
        body.PrefetchCount = PrefetchCount;
        body.Global = Global;
        		 
        AMQFrame frame = new AMQFrame();
        frame.Channel = channelId;
        frame.BodyFrame = body;
        return frame;
    }
} 
}
